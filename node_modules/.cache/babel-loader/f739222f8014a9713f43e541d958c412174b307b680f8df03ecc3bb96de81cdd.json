{"ast":null,"code":"import _slicedToArray from\"H:/Project/GoldStack_Store/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{useEffect}from'react';import{useState}from'react';import{useDispatch,useSelector}from'react-redux';import{detailsUser,updateUser}from'../actions/userActions';import LoadingBox from'../components/LoadingBox';import MessageBox from'../components/MessageBox';import{USER_UPDATE_RESET}from'../constants/userConstants';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function UserEditScreen(props){var userId=props.match.params.id;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isSeller=_useState6[0],setIsSeller=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isAdmin=_useState8[0],setIsAdmin=_useState8[1];var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,error=userDetails.error,user=userDetails.user;var userUpdate=useSelector(function(state){return state.userUpdate;});var loadingUpdate=userUpdate.loading,errorUpdate=userUpdate.error,successUpdate=userUpdate.success;var dispatch=useDispatch();useEffect(function(){if(successUpdate){dispatch({type:USER_UPDATE_RESET});props.history.push('/userlist');}if(!user){dispatch(detailsUser(userId));}else{setName(user.name);setEmail(user.email);setIsSeller(user.isSeller);setIsAdmin(user.isAdmin);}},[dispatch,props.history,successUpdate,user,userId]);var submitHandler=function submitHandler(e){e.preventDefault();// dispatch update user\ndispatch(updateUser({_id:userId,name:name,email:email,isSeller:isSeller,isAdmin:isAdmin}));};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Edit User \",name]}),loadingUpdate&&/*#__PURE__*/_jsx(LoadingBox,{}),errorUpdate&&/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:errorUpdate})]}),loading?/*#__PURE__*/_jsx(LoadingBox,{}):error?/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{id:\"name\",type:\"text\",placeholder:\"Enter name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{id:\"email\",type:\"email\",placeholder:\"Enter email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"isSeller\",children:\"Is Seller\"}),/*#__PURE__*/_jsx(\"input\",{id:\"isSeller\",type:\"checkbox\",checked:isSeller,onChange:function onChange(e){return setIsSeller(e.target.checked);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"isAdmin\",children:\"Is Admin\"}),/*#__PURE__*/_jsx(\"input\",{id:\"isAdmin\",type:\"checkbox\",checked:isAdmin,onChange:function onChange(e){return setIsAdmin(e.target.checked);}})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"primary\",children:\"Update\"})})]})]})});}","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","detailsUser","updateUser","LoadingBox","MessageBox","USER_UPDATE_RESET","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","UserEditScreen","props","userId","match","params","id","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","isSeller","setIsSeller","_useState7","_useState8","isAdmin","setIsAdmin","userDetails","state","loading","error","user","userUpdate","loadingUpdate","errorUpdate","successUpdate","success","dispatch","type","history","push","submitHandler","e","preventDefault","_id","children","className","onSubmit","variant","htmlFor","placeholder","value","onChange","target","checked"],"sources":["H:/Project/GoldStack_Store/frontend/src/screens/UserEditScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsUser, updateUser } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nexport default function UserEditScreen(props) {\r\n  const userId = props.match.params.id;\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isSeller, setIsSeller] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      props.history.push('/userlist');\r\n    }\r\n    if (!user) {\r\n      dispatch(detailsUser(userId));\r\n    } else {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setIsSeller(user.isSeller);\r\n      setIsAdmin(user.isAdmin);\r\n    }\r\n  }, [dispatch, props.history, successUpdate, user, userId]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // dispatch update user\r\n    dispatch(updateUser({ _id: userId, name, email, isSeller, isAdmin }));\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit User {name}</h1>\r\n          {loadingUpdate && <LoadingBox></LoadingBox>}\r\n          {errorUpdate && (\r\n            <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\r\n          )}\r\n        </div>\r\n        {loading ? (\r\n          <LoadingBox />\r\n        ) : error ? (\r\n          <MessageBox variant=\"danger\">{error}</MessageBox>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"isSeller\">Is Seller</label>\r\n              <input\r\n                id=\"isSeller\"\r\n                type=\"checkbox\"\r\n                checked={isSeller}\r\n                onChange={(e) => setIsSeller(e.target.checked)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"isAdmin\">Is Admin</label>\r\n              <input\r\n                id=\"isAdmin\"\r\n                type=\"checkbox\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\" className=\"primary\">\r\n                Update\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}